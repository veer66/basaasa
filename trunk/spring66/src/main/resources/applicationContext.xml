<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
           
    <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/dem"/>
        <property name="username" value="root"/>
        <property name="password" value="password"/>
    </bean>
    <!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->
    <!-- IBATIS CONFIG -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
            </value>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>
    </bean>
    
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
			p:sessionFactory-ref="sessionFactory"/>

    <aop:config>
		<!--
			This definition creates auto-proxy infrastructure based on the given pointcut,
			expressed in AspectJ pointcut language. Here: applying the advice named
			"txAdvice" to all methods on classes named PetStoreImpl.
		-->
        <aop:advisor pointcut="execution(* *..Clinic.*(..))" advice-ref="txAdvice"/>

		<!--
			This definition creates auto-proxy infrastructure based on the given pointcut,
			expressed in AspectJ pointcut language. Here: applying the advice named
			"emailAdvice" to insertOrder(Order) method of PetStoreImpl
		-->
		<!--
		<aop:advisor pointcut="execution(* *..PetStoreFacade.insertOrder(*..Order))" advice-ref="emailAdvice"/>
		-->
    </aop:config>

	<!--
		Transaction advice definition, based on method name patterns.
		Defaults to PROPAGATION_REQUIRED for all methods whose name starts with
		"insert" or "update", and to PROPAGATION_REQUIRED with read-only hint
		for all other methods.
	-->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="store*"/>
            <tx:method name="create*"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <bean id="clinicService"  name="clinic" class="com.spring66.training.service.impl.ClinicImpl">
        <property name="petDao" ref="petDao"/>
        <property name="pettypeDao" ref="pettypeDao"/>
        <property name="vetDao" ref="vetDao"/>
        <property name="ownerDao" ref="ownerDao"/>
        <property name="visitDao" ref="visitDao"/>
    </bean>

    <bean id="ownerDao" class="com.spring66.training.dao.hibernate.OwnerDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="petDao" class="com.spring66.training.dao.hibernate.PetDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="pettypeDao" class="com.spring66.training.dao.hibernate.PetTypeDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="vetDao" class="com.spring66.training.dao.hibernate.VetDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="visitDao" class="com.spring66.training.dao.hibernate.VisitDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven/>
</beans>